plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.graalvm.buildtools.native' version '0.10.3'
	id("org.openapi.generator") version "7.5.0"
}

group = 'it.gov.pagopa'
version = project.version

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

//ext {
//	set('springCloudAzureVersion', "5.18.0")
//}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//	implementation 'com.azure.spring:spring-cloud-azure-starter-actuator'
//	implementation 'com.azure.spring:spring-cloud-azure-starter-data-cosmos'
	implementation("io.swagger.core.v3:swagger-annotations:2.2.8")
	implementation("org.openapitools:jackson-databind-nullable:0.2.6")
	implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
	implementation("org.springframework.boot:spring-boot-starter-validation")
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
//		mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.compileJava {
	dependsOn("openApiGenerate")
}

sourceSets {
    main {
        java {
            srcDir("$projectDir/build/generated/src/main/java")
        }
    }
}

openApiGenerate {
	generatorName.set("spring")
	inputSpec.set("$rootDir/openapi/activation.openapi.yaml")
	outputDir.set("$projectDir/build/generated")
	apiPackage.set("it.gov.pagopa.rtp.activator.controller.generated")
	modelPackage.set("it.gov.pagopa.rtp.activator.model.generated")
	modelNameSuffix.set("Dto")
    configOptions.set([
        "dateLibrary"                         : "java8",
        "requestMappingMode"                  : "api_interface",
        "useSpringBoot3"                      : "true",
        "interfaceOnly"                       : "true",
        "useTags"                             : "true",
		"useSwaggerUI"                        : "false",
		"reactive"							  : "true",
		"swaggerAnnotations"				  : "false",
		"skipDefaultInterface"				  : "true",
    ])
    typeMappings.set([
        "DateTime"        : "java.time.LocalDateTime",
        "zoned-date-time" : "java.time.ZonedDateTime"
    ])
}
